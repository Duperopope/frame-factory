name: Deploy Static Site to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Get current timestamp
        id: timestamp
        run: echo "timestamp=$(date +%s)" >> $GITHUB_OUTPUT

      - name: Update version and cache busting
        run: |
          # Get current version from package.json or default to 0.1.3
          VERSION=$(node -p "require('./package.json').version" 2>/dev/null || echo "0.1.3")
          TIMESTAMP="${{ steps.timestamp.outputs.timestamp }}"
          BUILD_NUMBER="${GITHUB_RUN_NUMBER}"
          
          # Create new version with build number
          NEW_VERSION="${VERSION}.${BUILD_NUMBER}"
          
          echo "Building version: ${NEW_VERSION}"
          echo "Timestamp: ${TIMESTAMP}"
          
          # Update index.html with new version and cache busting
          sed -i "s/v[0-9]\+\.[0-9]\+\.[0-9]\+\(\.[0-9]\+\)\?/v${NEW_VERSION}/g" index.html
          sed -i "s/css\/main\.css?v=[^\"]*\"/css\/main.css?v=${TIMESTAMP}\"/g" index.html
          
          # Add cache busting to all JS files
          sed -i "s/src=\"js\/\([^\"]*\)\.js\"/src=\"js\/\1.js?v=${TIMESTAMP}\"/g" index.html
          
          # Create build info file
          echo "{\"version\":\"${NEW_VERSION}\",\"timestamp\":${TIMESTAMP},\"build\":${BUILD_NUMBER}}" > build-info.json
          
          # Update cache-bust.txt
          echo "Build: ${NEW_VERSION} - $(date)" > cache-bust.txt

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build site
        run: |
          # Create _site directory for GitHub Pages
          mkdir -p _site
          
          # Copy all files except .git, .github, node_modules
          rsync -av --exclude='.git' --exclude='.github' --exclude='node_modules' --exclude='_site' ./ _site/
          
          # Add .nojekyll to disable Jekyll processing
          touch _site/.nojekyll
          
          # Add cache headers file
          cat > _site/_headers << EOF
          /*
            Cache-Control: no-cache, no-store, must-revalidate
            Pragma: no-cache
            Expires: 0
          
          /*.css
            Cache-Control: public, max-age=300
          
          /*.js
            Cache-Control: public, max-age=300
          
          /*.html
            Cache-Control: no-cache, no-store, must-revalidate
          EOF

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Deployment Success
        run: |
          echo "ğŸš€ Deployment successful!"
          echo "Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo "Build completed at: $(date)"
